stages:
  - install
  - build
  - test
  - allure
  - release
  - deploy

variables:
  MAVEN_IMAGE: "maven:3.9.6-eclipse-temurin-17"
  MAVEN_OPTS: "-Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-fast --show-version"
  ALLURE_VERSION: "2.27.0"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository/

install_deps:
  stage: install
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ==="
    - mvn $MAVEN_CLI_OPTS dependency:resolve dependency:go-offline
  cache:
    policy: push
    paths:
      - .m2/repository/
  only:
    - pushes
    - merge_requests
    - master

build_project:
  stage: build
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –°–ë–û–†–ö–ê –ü–†–û–ï–ö–¢–ê ==="
    - mvn $MAVEN_CLI_OPTS clean compile test-compile
    - echo "=== –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò ==="
    - ls -la target/test-classes/ || echo "–ù–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∞—Å—Å–æ–≤"
  cache:
    policy: pull
    paths:
      - .m2/repository/
  dependencies:
    - install_deps
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

debug_structure:
  stage: test
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ü–†–û–ï–ö–¢–ê ==="
    - echo "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:"
    - pwd
    - echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–µ–∫—Ç–∞:"
    - ls -la
    - echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ src:"
    - find src -name "*.java" | head -20
    - echo "–ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∞—Å—Å–æ–≤:"
    - find . -name "*Test.java" -o -name "*Tests.java"
    - echo "–°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã:"
    - find target/test-classes -name "*.class" | head -10
  dependencies:
    - build_project

run_tests:
  stage: test
  image: $MAVEN_IMAGE
  tags: [lms]
  before_script:
    - echo "=== –£–°–¢–ê–ù–û–í–ö–ê CHROME ==="
    - apt-get update -qq
    - apt-get install -y -qq wget gnupg
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update -qq
    - apt-get install -y -qq google-chrome-stable
    - google-chrome --version
  script:
    - echo "=== –ó–ê–ü–£–°–ö –ê–í–¢–û–¢–ï–°–¢–û–í ==="
    - mvn $MAVEN_CLI_OPTS test -Dselenide.headless=true -DfailIfNoTests=false > maven_output.log 2>&1 || TEST_EXIT_CODE=$?
    - echo " "
    - echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í:"
    - echo "========================"
    - |
      TEST_RESULT=0
      
      if [ -d "target/surefire-reports" ]; then
        total_tests=$(grep -r "tests=" target/surefire-reports/ | grep -o 'tests="[0-9]*"' | cut -d'"' -f2 | awk '{sum+=$1} END {print sum}')
        total_failures=$(grep -r "failures=" target/surefire-reports/ | grep -o 'failures="[0-9]*"' | cut -d'"' -f2 | awk '{sum+=$1} END {print sum}')
        total_errors=$(grep -r "errors=" target/surefire-reports/ | grep -o 'errors="[0-9]*"' | cut -d'"' -f2 | awk '{sum+=$1} END {print sum}')
        total_skipped=$(grep -r "skipped=" target/surefire-reports/ | grep -o 'skipped="[0-9]*"' | cut -d'"' -f2 | awk '{sum+=$1} END {print sum}')
      
        echo " "
        echo "üéØ –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
        echo "   –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${total_tests:-0}"
        echo "   –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${total_failures:-0}"
        echo "   –û—à–∏–±–æ–∫: ${total_errors:-0}"
        echo "   –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${total_skipped:-0}"
        echo " "
      
        if [ "${total_failures:-0}" -gt 0 ]; then
          echo "‚ùå –ï–°–¢–¨ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò –í –¢–ï–°–¢–ê–• (FAILURES)!"
          echo "–£–ø–∞–≤—à–∏–µ —Ç–µ—Å—Ç—ã:"
          find target/surefire-reports -name "*.txt" -exec grep -l "FAILURE" {} \; | head -5
          TEST_RESULT=1
        fi
      
        if [ "${total_errors:-0}" -gt 0 ]; then
          echo "‚ö†Ô∏è  –ï–°–¢–¨ –ù–ï–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò (ERRORS)"
          echo "–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã:"
          find target/surefire-reports -name "*.txt" -exec grep -l "ERROR" {} \; | head -5
        fi
      
        if [ "${total_skipped:-0}" -gt 0 ]; then
          echo "‚ö†Ô∏è  –ï–°–¢–¨ –ü–†–û–ü–£–©–ï–ù–ù–´–ï –¢–ï–°–¢–´ (SKIPPED): ${total_skipped}"
        fi
      
        if [ "${TEST_RESULT}" -eq 0 ]; then
          echo "‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
        fi
      else
        echo "‚ùå –û—Ç—á–µ—Ç—ã surefire-reports –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
        TEST_RESULT=1
      fi
      
      exit 0
  artifacts:
    when: always
    paths:
      - target/allure-results/
      - target/surefire-reports/
      - maven_output.log
    expire_in: 1 week
  cache:
    policy: pull
    paths:
      - .m2/repository/
  dependencies:
    - build_project
  allow_failure: false

allure_report:
  stage: allure
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –ì–ï–ù–ï–†–ê–¶–ò–Ø ALLURE –û–¢–ß–ï–¢–ê ==="
    - mvn $MAVEN_CLI_OPTS allure:report || echo "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç"
  artifacts:
    when: always
    paths:
      - target/allure-report/
    expire_in: 1 week
  cache:
    policy: pull
    paths:
      - .m2/repository/
  dependencies:
    - run_tests
  allow_failure: true

release:
  stage: release
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –≠–¢–ê–ü –†–ï–õ–ò–ó–ê ==="
    - echo "–†–µ–ª–∏–∑–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞"
  only:
    - master

deploy:
  stage: deploy
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –≠–¢–ê–ü –î–ï–ü–õ–û–Ø ==="
    - echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ"
  only:
    - master

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature\/.+/
      when: always
    - if: $CI_COMMIT_BRANCH == "master"
      when: always
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - when: never