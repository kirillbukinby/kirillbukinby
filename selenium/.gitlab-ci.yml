stages:
  - install
  - build
  - test
  - allure-report
  - deploy

variables:
  MAVEN_IMAGE: "maven:3.9.6-eclipse-temurin-17"
  MAVEN_OPTS: "-Djava.awt.headless=true -Dfile.encoding=UTF-8"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-fast --show-version"
  ALLURE_VERSION: "2.27.0"
  SELENIUM_HEADLESS: "true"
  CI: "true"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository/
    - target/allure-results/

install_deps:
  stage: install
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ==="
    - mvn $MAVEN_CLI_OPTS dependency:resolve dependency:go-offline
  cache:
    policy: push
    paths:
      - .m2/repository/
  only:
    - pushes
    - merge_requests
    - master
    - main

build_project:
  stage: build
  image: $MAVEN_IMAGE
  tags: [lms]
  script:
    - echo "=== –°–ë–û–†–ö–ê –ü–†–û–ï–ö–¢–ê ==="
    - mvn $MAVEN_CLI_OPTS clean compile test-compile
    - echo "=== –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò ==="
    - find target/test-classes -name "*.class" | head -5
  cache:
    policy: pull
    paths:
      - .m2/repository/
  dependencies:
    - install_deps
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

setup_browser:
  stage: test
  image: $MAVEN_IMAGE
  tags: [lms]
  before_script:
    - echo "=== –£–°–¢–ê–ù–û–í–ö–ê CHROME –ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ==="
    - apt-get update -qq
    - apt-get install -y -qq wget gnupg unzip libgconf-2-4 libnss3-dev libxss1 libasound2
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update -qq
    - apt-get install -y -qq google-chrome-stable
    - google-chrome --version
    - echo "=== –£–°–¢–ê–ù–û–í–ö–ê Allure ==="
    - wget -q "https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.tgz"
    - tar -xzf "allure-$ALLURE_VERSION.tgz" -C /usr/local/
    - ln -s "/usr/local/allure-$ALLURE_VERSION/bin/allure" /usr/local/bin/allure
    - allure --version
  script:
    - echo "=== –ü–û–î–ì–û–¢–û–í–ö–ê –°–†–ï–î–´ ==="
    - echo "JAVA_HOME: $JAVA_HOME"
    - echo "Chrome version: $(google-chrome --version)"
    - echo "Allure version: $(allure --version)"
  artifacts:
    paths:
      - /usr/local/bin/allure
    expire_in: 1 day

run_tests:
  stage: test
  image: $MAVEN_IMAGE
  tags: [lms]
  dependencies:
    - build_project
    - setup_browser
  script:
    - echo "=== –ó–ê–ü–£–°–ö –ê–í–¢–û–¢–ï–°–¢–û–í ==="
    - echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    - echo "CI: $CI"
    - echo "SELENIUM_HEADLESS: $SELENIUM_HEADLESS"

    - |
      set +e
      mvn $MAVEN_CLI_OPTS test \
        -Dselenide.headless=$SELENIUM_HEADLESS \
        -Dallure.results.directory=target/allure-results \
        -DfailIfNoTests=false \
        -Dmaven.test.failure.ignore=true
      TEST_EXIT_CODE=$?
      set -e
      
      echo "–ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤: $TEST_EXIT_CODE"

    - echo "=== –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ==="
    - |
      if [ -d "target/surefire-reports" ]; then
        echo "üìä –û–¢–ß–ï–¢–´ SUREFIRE:"
        echo "===================="
      
        total_tests=0
        total_failures=0
        total_errors=0
        total_skipped=0
      
        for report in target/surefire-reports/*.xml; do
          if [ -f "$report" ]; then
            tests=$(grep -o 'tests="[0-9]*"' "$report" | cut -d'"' -f2)
            failures=$(grep -o 'failures="[0-9]*"' "$report" | cut -d'"' -f2)
            errors=$(grep -o 'errors="[0-9]*"' "$report" | cut -d'"' -f2)
            skipped=$(grep -o 'skipped="[0-9]*"' "$report" | cut -d'"' -f2)
      
            total_tests=$((total_tests + ${tests:-0}))
            total_failures=$((total_failures + ${failures:-0}))
            total_errors=$((total_errors + ${errors:-0}))
            total_skipped=$((total_skipped + ${skipped:-0}))
          fi
        done
      
        echo "   –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $total_tests"
        echo "   –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $total_failures"
        echo "   –û—à–∏–±–æ–∫: $total_errors"
        echo "   –ü—Ä–æ–ø—É—â–µ–Ω–æ: $total_skipped"
      
        if [ "$total_failures" -gt 0 ] || [ "$total_errors" -gt 0 ]; then
          echo "‚ùå –£–ü–ê–í–®–ò–ï –¢–ï–°–¢–´:"
          find target/surefire-reports -name "*.txt" -exec echo "   {}" \;
        fi
      
      else
        echo "‚ö†Ô∏è  –û—Ç—á–µ—Ç—ã surefire-reports –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
      fi
      
      if [ -d "target/allure-results" ]; then
        echo "‚úÖ Allure —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–±—Ä–∞–Ω—ã"
        ls -la target/allure-results/
      else
        echo "‚ö†Ô∏è  Allure —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
      fi
  artifacts:
    when: always
    paths:
      - target/allure-results/
      - target/surefire-reports/
      - target/screenshots/
    reports:
      junit: target/surefire-reports/**/*.xml
    expire_in: 1 week
  cache:
    policy: pull
    paths:
      - .m2/repository/
  allow_failure: true

generate_allure_report:
  stage: allure-report
  image: $MAVEN_IMAGE
  tags: [lms]
  dependencies:
    - run_tests
  script:
    - echo "=== –ì–ï–ù–ï–†–ê–¶–ò–Ø ALLURE –û–¢–ß–ï–¢–ê ==="
    - |
      if [ -d "target/allure-results" ] && [ "$(ls -A target/allure-results)" ]; then
        echo "–°–æ–∑–¥–∞–Ω–∏–µ Allure –æ—Ç—á–µ—Ç–∞..."
        allure generate target/allure-results -o target/allure-report --clean
        echo "Allure –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ target/allure-report/"
      else
        echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Allure –æ—Ç—á–µ—Ç–∞"
        mkdir -p target/allure-report
        echo "<html><body><h1>No test results found</h1></body></html>" > target/allure-report/index.html
      fi
  artifacts:
    when: always
    paths:
      - target/allure-report/
    expire_in: 1 week

deploy_allure:
  stage: deploy
  image: $MAVEN_IMAGE
  tags: [lms]
  dependencies:
    - generate_allure_report
  script:
    - echo "=== –î–ï–ü–õ–û–ô ALLURE –û–¢–ß–ï–¢–ê ==="
    - echo "Allure –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞—Ö –ø–∞–π–ø–ª–∞–π–Ω–∞"
    - echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤ target/allure-report/"
  only:
    - master
    - main
    - merge_requests

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(feature|hotfix)\/.+/
      when: always
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - when: never